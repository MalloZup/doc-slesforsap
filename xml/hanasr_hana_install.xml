<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0"
   xmlns:xi="http://www.w3.org/2001/XInclude"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xml:id="cha-s4s-hana-install">
 <title>Installing the &hana; Database</title>
 <para>
  Even though this document focuses on the integration of an already installed
  SAP HANA with already set up system replication into the SLE HAE cluster,
  this chapter summarizes the test environment.
  Please always use the official documentation from SAP to install SAP HANA
  and to setup the system replication.
 </para>
 <sect1>
  <title>SAP HANA Installation</title>

  <para>
   Preparation
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Read the SAP Installation and Setup Manuals available at the
     SAP Marketplace.
    </para>
   </listitem>
   <listitem>
    <para>
     Download the SAP HANA Software from SAP Market Place.
    </para>
   </listitem>
  </itemizedlist>

  <procedure>
   <title>Installation and Checks</title>
   <step>
    <para>
     Install the SAP HANA Database as described in the SAP HANA Server
     Installation Guide.
    </para>
   </step>
   <step>
    <para>
     Check if the SAPHOSTAGENT is installed on all cluster nodes. If this
     SAP service is not installed, please install it now.
    </para>
   </step>
   <step>
    <para>
     Verify that both databases are up and all processes of these databases
     are running correctly.
    </para>
   </step>
  </procedure>

  <para>
   As Linux user sidadm, use the command line tool “HDB” to get an
   overview of running HANA processes. The output of “HDB info”
   should show something like shown in the following screenshot:
  </para>

<screen>suse02:~&gt; HDB info
USER           PID  ...  COMMAND
sleadm         6561 ...  -csh
sleadm         6635 ...    \_ /bin/sh /usr/sap/SLE/HDB00/HDB info
sleadm         6658 ...        \_ ps fx -U sleadm -o user,pid,ppid,pcpu,vsz,rss,args
sleadm         5442 ...  sapstart pf=/hana/shared/SLE/profile/SLE_HDB00_suse02
sleadm         5456 ...   \_ /usr/sap/SLE/HDB00/suse02/trace/hdb.sapSLE_HDB00 -d
-nw -f /usr/sap/SLE/HDB00/suse
sleadm         5482 ...       \_ hdbnameserver
sleadm         5551 ...       \_ hdbpreprocessor
sleadm         5554 ...       \_ hdbcompileserver
sleadm         5583 ...       \_ hdbindexserver
sleadm         5586 ...       \_ hdbstatisticsserver
sleadm         5589 ...       \_ hdbxsengine
sleadm         5944 ...       \_ sapwebdisp_hdb
pf=/usr/sap/SLE/HDB00/suse02/wdisp/sapwebdisp.pfl -f /usr/sap/SL
sleadm         5363 ...  /usr/sap/SLE/HDB00/exe/sapstartsrv
pf=/hana/shared/SLE/profile/SLE_HDB00_suse02 -D -u s
suse02:HDB:sleadm ~ 5&gt;</screen>
 </sect1>
 <sect1>
  <title>Postinstallation configuration</title>

  <sect2>
   <title>Database user slehasync</title>
   <para>
    Create a user key in the secure store as root Linux user on all cluster
    nodes. For a demo it would be ok use database user “system” which is
    of course a bit too powerful. For real-world scenarios it's important
    also to create a database user which will be referenced by the user key
    in the secure store. You can create such a database user in HANA studio.
   </para>
   <para>
    Create a new user (like slehasync) and assign the system privilege
    “DATA_ADMIN” to the new user. If system privilege “DATA_ADMIN”
    is too powerful for your security policies, you need to check for more
    granular rights in the SAP documentation.
   </para>
   <para>
    A good check whether your database user has enough rights to get the
    synchronization status is to first create a user store key and then send
    the query which is described at the end of this subsection.
   </para>
   <figure xml:id="fig-hana-sr-studio-user">
    <title>Database User Configuration in SAP HANA Studio</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hana_studio_database_user_configuration.png" width="85%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hana_studio_database_user_configuration.png" width="85%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    As an alternative, the user could also be created using hsbsql on the
    command line.
   </para>
<screen>suse01:~ # PATH="$PATH:/usr/sap/SLE/HDB00/exe"
suse01:~ # hdbsql -u system -i 00 'CREATE USER slehasync PASSWORD L1nuxlab'
suse01:~ # hdbsql -u system -i 00 'GRANT DATA ADMIN TO slehasync'
suse01:~ # hdbsql -u system -i 00 'ALTER USER slehasync DISABLE PASSWORD LIFE-TIME'</screen>
   <para>
    While the database user needs to be created only on one side (the other
    will get the user by the system replication), the user keys for
    password-free access need to be created on both nodes as the user keys are
    stored in the file system and not in the database.
   </para>
   <para>
    For the user key environment, make sure that you use “localhost” as the
    database host. This is necessary, because the resource agent which needs
    the user key always should only access the local database instance.
   </para>
   <para>
    The name of the user key “slehaloc” is a fixed name used in the
    resource agent. The port should be set up as 3<emphasis>nn</emphasis>15,
    where nn is an SAP instance number, for example, “00”.
   </para>
<screen>suse01:~ # PATH="$PATH:/usr/sap/SLE/HDB00/exe"
suse01:~ # hdbuserstore SET slehaloc localhost:30015 slehasync L1nuxlab</screen>
   <para>
    Verify the setup as Linux user root. The option “-U key”
    tells hdbsql to use the credentials which are stored in the secure
    store. The table “dummy” is available for any database user, where
    each user has their own dummy table. So far the following test only
    shows that the user key has been defined correctly and we can log in to
    the database.
   </para>
<screen>suse01:~ # hdbsql -U slehaloc "select * from dummy"
DUMMY
"X"</screen>
   <para>
    Later you will need to check the access to the sync information. This
    has to be done after the system replication has been setup. The hdbsql
    call is described in section 4.3.4.
   </para>
   <para>
    An example of the use of the user key could also be found in section
    4.2.11.3 “Performing a Data Backup (Batch Mode)” of the
    Administration Guide.
   </para>
<!-- Fixme: Admin Guide of what, where? -->
  </sect2>

  <sect2>
   <title>Back Up the Primary Database</title>
   <para>
    Back up the primary database as described in Section 4.2.11.2 Performing
    a Data Backup (SQL Commands) of the SAP HANA Administration Guide.
   </para>
<screen>suse01:~ # hdbsql -u system -i 00 "BACKUP DATA USING FILE ('backup')"</screen>
   <para>
    If you have (for example) created a backup database user and a user key
    “hanabackup”, you can create an initial backup using the following
    command:
   </para>
<screen>suse01:~ # hdbsql -U hanabackup "BACKUP DATA USING FILE ('backup')"</screen>
   <para>
    If the user key hanabackup has not been defined, please use an
    instance/user/password combination for login.
   </para>
   <para>
    Without a valid backup, you cannot bring SAP HANA into a system
    replication configuration.
   </para>
  </sect2>

  <sect2>
   <title>HDB System Replication</title>
   <para>
    For more information, read Section 4.1.2 Setting up System Replication
    with hdbnsutil of SAP_HANA_Administration_Guide.
   </para>
   <sect3>
    <title>Enable Primary Node</title>
    <para>
     As Linux user sidadm enable the system replication at the primary node.
     You need to define a site name (like “WALLDORF”). This site name
     must be uniqueue for all SAP HANA databases which are connected via
     system replication. This means the secondary must have a different site
     name.
    </para>
<screen>suse01:~> hdbnsutil -sr_enable –-name=WALLDORF
checking local nameserver:
checking for active nameserver ...
nameserver is running, proceeding ...
configuring ini files ...
successfully enabled system as primary site ...
done.</screen>
   </sect3>
   <sect3>
    <title>Verify the state of system replication</title>
    <para>
     The command line tool hdbnsutil can be used to check the system
     replication mode and site name.
    </para>
<screen>suse01:~> hdbnsutil -sr_state
checking for active or inactive nameserver ...
System Replication State
~~~~~~~~~~~~~~~~~~~~~~~~
mode: primary
site id: 1
site name: WALLDORF
Host Mappings:
~~~~~~~~~~~~~~
done.</screen>
    <para>
     The mode changed from “none” to “primary” and the site now has
     a site name and a site ID.
    </para>
   </sect3>
   <sect3>
    <title>Enable the Secondary Node</title>
    <para>
     The SAP HANA database instance on the secondary side must be stopped
     before the instance can be registered for the system replication. You
     can use your preferred method to stop the instance (like HDB or
     sapcontrol). After the database instance is stopped successfully, you
     can register the instance using hdbnsutil. Again, use Linux user
     sidadm:
    </para>
<screen>suse02:~> hdbnsutil -sr_register --remoteHost=suse01 --remoteInstance=00
--mode=sync --name=ROT
adding site ...
checking for inactive nameserver ...
nameserver suse02:30001 not responding.
collecting information ...
updating local ini files ...
done.</screen>
    <para>
     Now start the database instance again and verify the system replication
     status. On the secondary node, the mode should be one of „sync“,
     „syncmem“ or „async“. The mode depends on what has been defined
     during the registration of the client.
    </para>
    <para>
     The remoteHost is the primary node in our case, the remoteInstance is
     the database instance number (here 00).
    </para>
   </sect3>
   <sect3>
    <title>Checking the access to sync information</title>
    <para>
     Now check if the database user has enough rights to access the
     synchronisation information.
    </para>
<screen>suse01:~ # hdbsql -U slehaloc 'select distinct REPLICATION_STATUS from SYS.M_SERVICE_REPLICATION'</screen>
    <para>
     If you get a result like <literal>error</literal>,
     <literal>unknown</literal>, <literal>syncing</literal> or
     <literal>active</literal>, the user is able to access the
     synchronization info.
    </para>
   </sect3>
  </sect2>
 </sect1>
</chapter>
